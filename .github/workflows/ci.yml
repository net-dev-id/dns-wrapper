name: CI

on:
  push:
  pull_request:

jobs:
  build-and-test-windows:
    name: run on windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@v1.4.1
    - name: Build with MS VC++
      run: |
           mkdir build
           #cmake --build build --config Debug
           cmake -G "Ninja" -Bbuild -S. -DCMAKE_BUILD_TYPE:STRING="Debug" 
           nmake -C build
           #-DCMAKE_INSTALL_PREFIX:PATH="C:\Users\ncd\git\dns-wrapper\out\install\x64-Debug" 
           #-DCMAKE_C_COMPILER:FILEPATH="C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.40.33807/bin/Hostx64/x64/cl.exe" 
           #-DCMAKE_CXX_COMPILER:FILEPATH="C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.40.33807/bin/Hostx64/x64/cl.exe"   
           #-DCMAKE_MAKE_PROGRAM="C:\PROGRAM FILES\MICROSOFT VISUAL STUDIO\2022\COMMUNITY\COMMON7\IDE\COMMONEXTENSIONS\MICROSOFT\CMAKE\Ninja\ninja.exe" 
           #"C:\Users\ncd\git\dns-wrapper" 2>&1"

    #- name: upload executable
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: windows
    #    path: |
    #      spark.exe
  build-and-test-linux:
    name: ${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        toolchain:
          - linux-gcc
        configuration:
          - Debug
        include:
          - toolchain: linux-gcc
            os: ubuntu-24.04
            compiler: gcc
    steps:
    - name: Install dev dependencies
      run: sudo apt-get install -y libboost-all-dev doxygen libclang-15-dev
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Configure (${{ matrix.configuration }})
      run: cmake -S . -Bbuild -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}
    - name: Build with ${{ matrix.compiler }}
      run: cmake --build build --config ${{ matrix.configuration }}
    - name: Test
      working-directory: build
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      run: ctest -C ${{ matrix.configuration }}
